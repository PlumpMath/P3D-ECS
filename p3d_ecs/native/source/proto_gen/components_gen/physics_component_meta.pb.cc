// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components_gen/physics_component_meta.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "components_gen/physics_component_meta.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace p3d_ecs {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* PhysicsComponent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PhysicsComponent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto() {
  protobuf_AddDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "components_gen/physics_component_meta.proto");
  GOOGLE_CHECK(file != NULL);
  PhysicsComponent_descriptor_ = file->message_type(0);
  static const int PhysicsComponent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhysicsComponent, mass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhysicsComponent, is_static_),
  };
  PhysicsComponent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PhysicsComponent_descriptor_,
      PhysicsComponent::internal_default_instance(),
      PhysicsComponent_offsets_,
      -1,
      -1,
      -1,
      sizeof(PhysicsComponent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhysicsComponent, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PhysicsComponent_descriptor_, PhysicsComponent::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto() {
  PhysicsComponent_default_instance_.Shutdown();
  delete PhysicsComponent_reflection_;
}

void protobuf_InitDefaults_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fwrappers_2eproto();
  PhysicsComponent_default_instance_.DefaultConstruct();
  PhysicsComponent_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto_once_);
void protobuf_InitDefaults_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto_once_,
                 &protobuf_InitDefaults_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto_impl);
}
void protobuf_AddDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n+components_gen/physics_component_meta."
    "proto\022\rp3d_ecs.proto\032\036google/protobuf/wr"
    "appers.proto\"l\n\020PhysicsComponent\022)\n\004mass"
    "\030\001 \001(\0132\033.google.protobuf.FloatValue\022-\n\ti"
    "s_static\030\002 \001(\0132\032.google.protobuf.BoolVal"
    "ueb\006proto3", 210);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "components_gen/physics_component_meta.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto_once_);
void protobuf_AddDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto_once_,
                 &protobuf_AddDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto {
  StaticDescriptorInitializer_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto() {
    protobuf_AddDesc_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto();
  }
} static_descriptor_initializer_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhysicsComponent::kMassFieldNumber;
const int PhysicsComponent::kIsStaticFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhysicsComponent::PhysicsComponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:p3d_ecs.proto.PhysicsComponent)
}

void PhysicsComponent::InitAsDefaultInstance() {
  mass_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  is_static_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}

PhysicsComponent::PhysicsComponent(const PhysicsComponent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p3d_ecs.proto.PhysicsComponent)
}

void PhysicsComponent::SharedCtor() {
  mass_ = NULL;
  is_static_ = NULL;
  _cached_size_ = 0;
}

PhysicsComponent::~PhysicsComponent() {
  // @@protoc_insertion_point(destructor:p3d_ecs.proto.PhysicsComponent)
  SharedDtor();
}

void PhysicsComponent::SharedDtor() {
  if (this != &PhysicsComponent_default_instance_.get()) {
    delete mass_;
    delete is_static_;
  }
}

void PhysicsComponent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhysicsComponent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PhysicsComponent_descriptor_;
}

const PhysicsComponent& PhysicsComponent::default_instance() {
  protobuf_InitDefaults_components_5fgen_2fphysics_5fcomponent_5fmeta_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PhysicsComponent> PhysicsComponent_default_instance_;

PhysicsComponent* PhysicsComponent::New(::google::protobuf::Arena* arena) const {
  PhysicsComponent* n = new PhysicsComponent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhysicsComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:p3d_ecs.proto.PhysicsComponent)
  if (GetArenaNoVirtual() == NULL && mass_ != NULL) delete mass_;
  mass_ = NULL;
  if (GetArenaNoVirtual() == NULL && is_static_ != NULL) delete is_static_;
  is_static_ = NULL;
}

bool PhysicsComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p3d_ecs.proto.PhysicsComponent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.FloatValue mass = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mass()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_is_static;
        break;
      }

      // optional .google.protobuf.BoolValue is_static = 2;
      case 2: {
        if (tag == 18) {
         parse_is_static:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_is_static()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p3d_ecs.proto.PhysicsComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p3d_ecs.proto.PhysicsComponent)
  return false;
#undef DO_
}

void PhysicsComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p3d_ecs.proto.PhysicsComponent)
  // optional .google.protobuf.FloatValue mass = 1;
  if (this->has_mass()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->mass_, output);
  }

  // optional .google.protobuf.BoolValue is_static = 2;
  if (this->has_is_static()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->is_static_, output);
  }

  // @@protoc_insertion_point(serialize_end:p3d_ecs.proto.PhysicsComponent)
}

::google::protobuf::uint8* PhysicsComponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p3d_ecs.proto.PhysicsComponent)
  // optional .google.protobuf.FloatValue mass = 1;
  if (this->has_mass()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->mass_, false, target);
  }

  // optional .google.protobuf.BoolValue is_static = 2;
  if (this->has_is_static()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->is_static_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p3d_ecs.proto.PhysicsComponent)
  return target;
}

size_t PhysicsComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p3d_ecs.proto.PhysicsComponent)
  size_t total_size = 0;

  // optional .google.protobuf.FloatValue mass = 1;
  if (this->has_mass()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mass_);
  }

  // optional .google.protobuf.BoolValue is_static = 2;
  if (this->has_is_static()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->is_static_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhysicsComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p3d_ecs.proto.PhysicsComponent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PhysicsComponent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhysicsComponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p3d_ecs.proto.PhysicsComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p3d_ecs.proto.PhysicsComponent)
    UnsafeMergeFrom(*source);
  }
}

void PhysicsComponent::MergeFrom(const PhysicsComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p3d_ecs.proto.PhysicsComponent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PhysicsComponent::UnsafeMergeFrom(const PhysicsComponent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_mass()) {
    mutable_mass()->::google::protobuf::FloatValue::MergeFrom(from.mass());
  }
  if (from.has_is_static()) {
    mutable_is_static()->::google::protobuf::BoolValue::MergeFrom(from.is_static());
  }
}

void PhysicsComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p3d_ecs.proto.PhysicsComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhysicsComponent::CopyFrom(const PhysicsComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p3d_ecs.proto.PhysicsComponent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PhysicsComponent::IsInitialized() const {

  return true;
}

void PhysicsComponent::Swap(PhysicsComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhysicsComponent::InternalSwap(PhysicsComponent* other) {
  std::swap(mass_, other->mass_);
  std::swap(is_static_, other->is_static_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhysicsComponent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PhysicsComponent_descriptor_;
  metadata.reflection = PhysicsComponent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PhysicsComponent

// optional .google.protobuf.FloatValue mass = 1;
bool PhysicsComponent::has_mass() const {
  return this != internal_default_instance() && mass_ != NULL;
}
void PhysicsComponent::clear_mass() {
  if (GetArenaNoVirtual() == NULL && mass_ != NULL) delete mass_;
  mass_ = NULL;
}
const ::google::protobuf::FloatValue& PhysicsComponent::mass() const {
  // @@protoc_insertion_point(field_get:p3d_ecs.proto.PhysicsComponent.mass)
  return mass_ != NULL ? *mass_
                         : *::google::protobuf::FloatValue::internal_default_instance();
}
::google::protobuf::FloatValue* PhysicsComponent::mutable_mass() {
  
  if (mass_ == NULL) {
    mass_ = new ::google::protobuf::FloatValue;
  }
  // @@protoc_insertion_point(field_mutable:p3d_ecs.proto.PhysicsComponent.mass)
  return mass_;
}
::google::protobuf::FloatValue* PhysicsComponent::release_mass() {
  // @@protoc_insertion_point(field_release:p3d_ecs.proto.PhysicsComponent.mass)
  
  ::google::protobuf::FloatValue* temp = mass_;
  mass_ = NULL;
  return temp;
}
void PhysicsComponent::set_allocated_mass(::google::protobuf::FloatValue* mass) {
  delete mass_;
  if (mass != NULL && mass->GetArena() != NULL) {
    ::google::protobuf::FloatValue* new_mass = new ::google::protobuf::FloatValue;
    new_mass->CopyFrom(*mass);
    mass = new_mass;
  }
  mass_ = mass;
  if (mass) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p3d_ecs.proto.PhysicsComponent.mass)
}

// optional .google.protobuf.BoolValue is_static = 2;
bool PhysicsComponent::has_is_static() const {
  return this != internal_default_instance() && is_static_ != NULL;
}
void PhysicsComponent::clear_is_static() {
  if (GetArenaNoVirtual() == NULL && is_static_ != NULL) delete is_static_;
  is_static_ = NULL;
}
const ::google::protobuf::BoolValue& PhysicsComponent::is_static() const {
  // @@protoc_insertion_point(field_get:p3d_ecs.proto.PhysicsComponent.is_static)
  return is_static_ != NULL ? *is_static_
                         : *::google::protobuf::BoolValue::internal_default_instance();
}
::google::protobuf::BoolValue* PhysicsComponent::mutable_is_static() {
  
  if (is_static_ == NULL) {
    is_static_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:p3d_ecs.proto.PhysicsComponent.is_static)
  return is_static_;
}
::google::protobuf::BoolValue* PhysicsComponent::release_is_static() {
  // @@protoc_insertion_point(field_release:p3d_ecs.proto.PhysicsComponent.is_static)
  
  ::google::protobuf::BoolValue* temp = is_static_;
  is_static_ = NULL;
  return temp;
}
void PhysicsComponent::set_allocated_is_static(::google::protobuf::BoolValue* is_static) {
  delete is_static_;
  if (is_static != NULL && is_static->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_is_static = new ::google::protobuf::BoolValue;
    new_is_static->CopyFrom(*is_static);
    is_static = new_is_static;
  }
  is_static_ = is_static;
  if (is_static) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p3d_ecs.proto.PhysicsComponent.is_static)
}

inline const PhysicsComponent* PhysicsComponent::internal_default_instance() {
  return &PhysicsComponent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace p3d_ecs

// @@protoc_insertion_point(global_scope)
