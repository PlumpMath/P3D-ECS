#pragma once

// AUTOGENERATED. DO NOT EDIT!
// Instead modify the component meta file.

#ifndef P3D_ECS_TRANSFORMCOMPONENT_METACLS_H
#define P3D_ECS_TRANSFORMCOMPONENT_METACLS_H

#include "config_module.h"
#include "component.h"
#include "leak_detector.h"
#include "memory_pool.h"
#include "luse.h"
#include "uuid.h"
#include <string>

// AUTOGEN:: aditional includes
#include <vector>

class Entity;
class EntityManager;
class TransformComponent;

class TransformComponentMeta : public Component {
protected:
  using superclass = TransformComponentMeta;

public:
  DEFINE_COMPONENT_BASE();

  // AUTOGEN:: accessors
  inline bool get_abs_matrix_is_dirty() const { return _abs_matrix_is_dirty; }

  inline const LVecBase3f& get_hpr() const { return _hpr; }

  inline const LVecBase3f& get_pos() const { return _pos; }

  inline const LVecBase3f& get_scale() const { return _scale; }

  inline const LMatrix4f& get_matrix() const { return _matrix; }

  inline Entity* get_parent() const { return _parent; }

  inline const std::vector<Entity*>& get_children() const { return _children; }

  // AUTOGEN:: serialization

#ifndef INTERROGATE
  virtual void serialize(p3d_ecs::proto::Components* dest) const override;
  void deserialize(const p3d_ecs::proto::TransformComponent& message);
  virtual bool data_equals(const Component& other) const override;
  virtual void fillin_ptrs() override;
#endif

protected:
  // AUTOGEN:: constructor
  inline TransformComponentMeta(Entity* entity) : Component(entity)
    , _abs_matrix_is_dirty(false)
    , _absolute_matrix(_absolute_matrix_DEFAULT)
    , _hpr(_hpr_DEFAULT)
    , _pos(_pos_DEFAULT)
    , _scale(_scale_DEFAULT)
    , _matrix(_matrix_DEFAULT)
    , _parent(nullptr)
    , _children()
    { ECS_ON_CREATE("TransformComponentMeta"); };

  ~TransformComponentMeta() { ECS_ON_DELETE("TransformComponentMeta"); };
  // AUTOGEN:: internal members
  bool _abs_matrix_is_dirty;

  LMatrix4f _absolute_matrix;
  static const LMatrix4f _absolute_matrix_DEFAULT;

  LVecBase3f _hpr;
  static const LVecBase3f _hpr_DEFAULT;

  LVecBase3f _pos;
  static const LVecBase3f _pos_DEFAULT;

  LVecBase3f _scale;
  static const LVecBase3f _scale_DEFAULT;

  LMatrix4f _matrix;
  static const LMatrix4f _matrix_DEFAULT;

  Entity* _parent;
  UUID _parent_FILLIN_CACHE;

  std::vector<Entity*> _children;
  std::vector<UUID> _children_FILLIN_CACHE;

};
#endif
